<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>com.decozero</groupId>
    <artifactId>deco-ai-service-oracle</artifactId>
    <version>1.0.0</version>
    <packaging>jar</packaging>

    <properties>
        <maven.compiler.source>11</maven.compiler.source>
        <maven.compiler.target>11</maven.compiler.target>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <mainClass>com.decozero.AiServiceOracle</mainClass> <!-- Main class for GraalVM -->
        <graalvm.version>22.3.1</graalvm.version> <!-- Compatible with Java 11, choose a stable version -->
        <native.maven.plugin.version>0.9.13</native.maven.plugin.version>
        <distroless.version>latest</distroless.version> <!-- Or specific version like "gcr.io/distroless/java:11" -->
    </properties>

    <dependencies>
        <!-- Web Server (Spark Java for simplicity in a fat jar, or Spring Boot for larger apps) -->
        <dependency>
            <groupId>com.sparkjava</groupId>
            <artifactId>spark-core</artifactId>
            <version>2.9.3</version>
        </dependency>

        <!-- Google Cloud AI Platform (Gemini) Client Library -->
        <dependency>
            <groupId>com.google.cloud</groupId>
            <artifactId>google-cloud-aiplatform</artifactId>
            <version>3.2.0</version> <!-- Use a recent version -->
        </dependency>
        <dependency>
            <groupId>com.google.protobuf</groupId>
            <artifactId>protobuf-java</artifactId>
            <version>3.25.1</version> <!-- Ensure compatibility -->
        </dependency>
        <dependency>
            <groupId>io.grpc</groupId>
            <artifactId>grpc-netty-shaded</artifactId>
            <version>1.62.2</version> <!-- Ensure compatibility with gRPC for AI Platform client -->
        </dependency>
        
        <!-- Google Cloud Auth (for AI Platform/Gemini) -->
        <dependency>
            <groupId>com.google.auth</groupId>
            <artifactId>google-auth-library-oauth2-http</artifactId>
            <version>1.24.0</version>
        </dependency>

        <!-- For parsing JSON (e.g., incoming NEAR event payload, GitHub API responses) -->
        <dependency>
            <groupId>com.google.code.gson</groupId>
            <artifactId>gson</artifactId>
            <version>2.10.1</version>
        </dependency>

        <!-- For GitHub API interaction (reading README, committing files) -->
        <dependency>
            <groupId>org.kohsuke</groupId>
            <artifactId>github-api</artifactId>
            <version>1.315</version>
        </dependency>

        <!-- For Logging -->
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-simple</artifactId>
            <version>1.7.36</version>
        </dependency>

        <!-- GraalVM Native Image Build-Time Dependency for reflection configuration -->
        <dependency>
            <groupId>org.graalvm.sdk</groupId>
            <artifactId>graal-sdk</artifactId>
            <version>${graalvm.version}</version>
            <scope>provided</scope>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.8.1</version>
                <configuration>
                    <source>${maven.compiler.source}</source>
                    <target>${maven.compiler.target}</target>
                </configuration>
            </plugin>
            
            <!-- GraalVM Native Image Plugin -->
            <plugin>
                <groupId>org.graalvm.buildtools</groupId>
                <artifactId>native-maven-plugin</artifactId>
                <version>${native.maven.plugin.version}</version>
                <extensions>true</extensions>
                <executions>
                    <execution>
                        <id>build-native</id>
                        <goals>
                            <goal>compile</goal>
                            <goal>test</goal>
                        </goals>
                        <phase>package</phase>
                    </execution>
                </executions>
                <configuration>
                    <mainClass>${mainClass}</mainClass>
                    <buildArgs>
                        <!-- Add arguments for smaller image size and better compatibility -->
                        <arg>--no-fallback</arg>
                        <arg>--enable-http</arg>
                        <arg>--enable-https</arg>
                        <arg>--no-server</arg>
                        <!-- More arguments might be needed depending on reflection, JNI, resources -->
                        <!-- For example, if you face issues, you might need: -->
                        <!-- <arg>-H:+PrintAnalysisCallTree</arg> -->
                        <!-- <arg>-H:ReflectionConfigurationFiles=path/to/reflection-config.json</arg> -->
                    </buildArgs>
                    <!-- Configure output directory if needed, default is target/ -->
                </configuration>
            </plugin>

            <!-- The shade plugin is still useful for creating a fat JAR for fallback/non-native builds,
                 but for native image, the 'native-maven-plugin' takes precedence for the final executable.
                 It's good to keep it if you might need to deploy as a standard JAR as well. -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-shade-plugin</artifactId>
                <version>3.2.4</version>
                <executions>
                    <execution>
                        <phase>package</phase>
                        <goals>
                            <goal>shade</goal>
                        </goals>
                        <configuration>
                            <filters>
                                <filter>
                                    <artifact>*:*</artifact>
                                    <excludes>
                                        <exclude>META-INF/*.SF</exclude>
                                        <exclude>META-INF/*.DSA</exclude>
                                        <exclude>META-INF/*.RSA</exclude>
                                    </excludes>
                                </filter>
                            </filters>
                            <createDependencyReducedPom>false</createDependencyReducedPom>
                            <transformers>
                                <transformer implementation="org.apache.maven.plugins.shade.resource.ManifestResourceTransformer">
                                    <mainClass>${mainClass}</mainClass>
                                </transformer>
                            </transformers>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>
</project>
